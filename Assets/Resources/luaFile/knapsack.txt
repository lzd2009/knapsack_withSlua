import "UnityEngine"

local equipmentsInfo = require 'luaFile.infos.equipmentsInfo';
local itemsInfo = require 'luaFile.infos.itemsInfo';
local fragmentsInfo = require 'luaFile.infos.fragmentsInfo';
local ownEquipment = require 'luaFile.dataModels.ownEquipment';
local ownItem = require 'luaFile.dataModels.ownItem';
local ownFragment = require 'luaFile.dataModels.ownFragment';
local commonFuncs= require 'luaFile.commonFuncs.commonFuncs';
local equipmentDetailPanel = require 'luaFile.ui.equipmentDetailPanel';
local grid = require 'luaFile.ui.grid';
local getSomethingPanel = require 'luaFile.ui.getSomethingPanel';
local gridShowPlace = require 'luaFile.ui.gridShowPlace';

local canvasTrans = nil;
local knapsackPanelGo = nil;
local showListTrans = nil;

function OnGetRandomBtnClick()
    local gridType = math.random(1,3);
    OnGetBtnClick(gridType);
end
function OnGetOneEquipmentBtnClick()
    local gridType = 1;
    OnGetBtnClick(gridType);
end
function OnGetOneItemBtnClick()
    local gridType = 2;
    OnGetBtnClick(gridType);
end
function OnGetOneFragmentBtnClick()
    local gridType =3;
    OnGetBtnClick(gridType);
end

function OnGetBtnClick(gridType)
    local id,instanceID = CreateGridData(gridType);
    if(showListTrans == nil)then
        showListTrans = knapsackPanelGo.transform:Find("showPlace/showList");
    end

    --如果没有这个格子，才创建。
    local index,gridInstance = gridShowPlace:TryGetOwnGrid(gridType,id,instanceID);
    if(gridInstance== nil)then
        gridInstance = grid:New(showListTrans,gridType,id,instanceID);
        gridShowPlace:AddGridToList(gridInstance);
    end
    gridInstance:Show();
    gridShowPlace:ShowCurrentKindOfGrid();
    getSomethingPanelInstance:Show(gridType,id,instanceID);
end

function CreateGridData(gridType)
    if(gridType == 1)then
        --EquipmentData的定义在ownEquipment.txt文件中.
        local equipmentID = math.random(1,commonFuncs:GetTabLength(equipmentsInfo));
        local instanceID = commonFuncs:GenerateID();
        local equipmentData = EquipmentData:New(equipmentID,instanceID);
        ownEquipment:Add(equipmentData);
        return equipmentID, instanceID;
    elseif (gridType == 2) then
        local id = math.random(1,commonFuncs:GetTabLength(itemsInfo));
        ownItem:Add(id,1);
        return id,id;  --不需要instanceID
    elseif (gridType == 3) then
        local id = math.random(1,commonFuncs:GetTabLength(fragmentsInfo));
        ownFragment:Add(id,1);
        return id,id;
    end
end

function main()
    local tab = {}
    function tab:Start()
        canvasTrans = GameObject.Find("Canvas").transform;

        knapsackPanelGo =GameObject.Instantiate(Resources.Load("Prefabs/KnapsackPanel"),canvasTrans);
        local knapsackPanelTrans = knapsackPanelGo.transform;
        local getRandomBtn = knapsackPanelTrans:Find("testBtns/getRandomOneBtn"):GetComponent(UI.Button);
        local getOneEquipmentBtn = knapsackPanelTrans:Find("testBtns/getOneEquipmentBtn"):GetComponent(UI.Button);
        local getOneItemBtn = knapsackPanelTrans:Find("testBtns/getOneItemBtn"):GetComponent(UI.Button);
        local getOneFragmentBtn = knapsackPanelTrans:Find("testBtns/getOneFragmentBtn"):GetComponent(UI.Button);
        local equipmentToggle = knapsackPanelTrans:Find("switchToggles/equipmentToggle"):GetComponent(UI.Toggle);
        local itemToggle = knapsackPanelTrans:Find("switchToggles/itemToggle"):GetComponent(UI.Toggle);
        local fragmentToggle = knapsackPanelTrans:Find("switchToggles/fragmentToggle"):GetComponent(UI.Toggle);
        getRandomBtn.onClick:AddListener(OnGetRandomBtnClick);
        getOneEquipmentBtn.onClick:AddListener(OnGetOneEquipmentBtnClick);
        getOneItemBtn.onClick:AddListener(OnGetOneItemBtnClick);
        getOneFragmentBtn.onClick:AddListener(OnGetOneFragmentBtnClick);
        equipmentToggle.onValueChanged:AddListener(function (isClick)
            if(isClick)then
                gridShowPlace:ShowOneKindOfGrid(1);
            end
        end)
        itemToggle.onValueChanged:AddListener(function (isClick)
            if(isClick)then
                gridShowPlace:ShowOneKindOfGrid(2);
            end
        end)
        fragmentToggle.onValueChanged:AddListener(function (isClick)
            if(isClick)then
                gridShowPlace:ShowOneKindOfGrid(3);
            end
        end)
        getSomethingPanelInstance = getSomethingPanel:New(canvasTrans);
    end

    function tab:Update()
    end

    function tab:OnEnable()

    end

    function tab:OnDisable()

    end
    return tab;
end













